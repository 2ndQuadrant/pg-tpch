#!/bin/bash

BASEDIR=$(dirname "$0")
BASEDIR=$(cd "$BASEDIR"; pwd)
. "$BASEDIR/pgtpch_defaults"

### Set up a custom directory for this set of runs
if [ $# -gt 0 ]; then
  PERFDATADIR="$PERFDATADIR-$1"
fi

perf_set_kernel_params

for i in $(seq 1 22);
do
  ii=$(printf "%02d" $i)
  dir="$PERFDATADIR/q${ii}"
  mkdir -p $dir
  cd "$dir"

  f="queries/q$ii.sql"

  ### Get execution time without perf
  /usr/bin/time -f '%e\n%Uuser %Ssystem %Eelapsed %PCPU (%Xtext+%Ddata %Mmax)k'\
    -o exectime.txt \
    postgres --single -j -D $PGDATADIR $DB_NAME <"$BASEDIR/$f"
    
  ### Collect data with perf to generate callgraph
  perf record -g postgres --single -j -D $PGDATADIR $DB_NAME <"$BASEDIR/$f"

  ### Collect basic stats with perf
  perf stat -B --log-fd 2 --\
    postgres --single -j -D $PGDATADIR $DB_NAME <"$BASEDIR/$f" 2> stats.txt

  ### The following is not necessary when running postgres with '--single'
  #PGPID=$!
  #while ! pg_ctl status -D $PGDATADIR | grep "server is running" -q; do
    #echo "Waiting for the Postgres server to start"
    #sleep 1
  #done
  #echo "Running query: $i"
  #/usr/bin/time -f '%e\n%Uuser %Ssystem %Eelapsed %PCPU (%Xtext+%Ddata %Mmax)k'\
    #-o query_exec_seconds.txt \
    #psql -p $PGPORT tpch <"$BASEDIR/$f"
  #pg_ctl stop -D $PGDATADIR

  cgf="../q${ii}-callgraph.pdf"
  echo "Creating the call graph: $cgf"
  perf script | python "$BASEDIR/gprof2dot.py" -f perf | dot -Tpdf -o $cgf &
  cd - >/dev/null
done

for p in $(jobs -p);
do
  wait $p
done

