#!/bin/bash

BASEDIR=$(dirname "$0")
BASEDIR=$(cd "$BASEDIR"; pwd)
. "$BASEDIR/pgtpch_defaults"

if [ $# -ne 1 ]; then
  echo "Please provide the number of the query you wish to run, e.g.:"
  echo "$0 6"
  exit 1
fi

if [ -r /proc/sys/kernel/kptr_restrict ] && [ $(cat /proc/sys/kernel/kptr_restrict) -ne 0 ]; then
  echo "Perf requires reading kernel symbols. Please enter your sudo password to allow this:"
  echo 0 | sudo tee /proc/sys/kernel/kptr_restrict
fi

ii=$(printf "%02d" $1)
dir="$PERFDATADIR/q${ii}"
mkdir -p $dir
cd "$dir"
### get statistics e.g. IPC, cache hits/misses
# perf stat -B --log-fd 2 -- postgres -D $PGDATADIR -p $PGPORT &
### for callgraph
perf record -g postgres -D $PGDATADIR -p $PGPORT &
### run under dynamorio
# drrun -c "$DRIO_NVRAMSIM" -- postgres -D $PGDATADIR -p $PGPORT &
### run under pin
#$PIN_EXE -follow_execv -mt -t "$PIN_NVRAMSIM" -- postgres -D $PGDATADIR -p $PGPORT &
pg_ctl -D $PGDATADIR status
while ! pg_ctl status -D $PGDATADIR | grep "server is running" -q; do
  echo "Waiting for the Postgres server to start"
  pg_ctl -D $PGDATADIR status
  sleep 1
done
pg_ctl -D $PGDATADIR status
sleep 2
f="queries/q$ii.sql"
echo "Running query: $i"
/usr/bin/time -f '%e\n%Uuser %Ssystem %Eelapsed %PCPU (%Xtext+%Ddata %Mmax)k'\
  -o query_exec_seconds.txt \
  psql -p $PGPORT tpch <"$BASEDIR/$f"
echo "Asking Pg server to stop"
pg_ctl stop -D $PGDATADIR
echo "Pg server stopped"
cgf="../q${ii}-callgraph.pdf"
echo "Creating the call graph: $cgf"
perf script | python "$BASEDIR/gprof2dot.py" -f perf | dot -Tpdf -o $cgf &
cd - >/dev/null

for p in $(jobs -p);
do
  wait $p
done

